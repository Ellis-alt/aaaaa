name: Kernel Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone Kernel Source
        run: |
          git clone --depth=1 --branch munch-ksu https://github.com/UdayKumarChunduru/kernel_xiaomi_munch.git kernel

      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libelf-dev flex bison libncurses-dev zstd
          wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
          mkdir -p clang-neutron
          unzstd -d clang.tar.zst
          tar -xf clang.tar -C clang-neutron
          echo "CLANG_PATH=$(pwd)/clang-neutron/bin" >> $GITHUB_ENV

          cd kernel
          echo "ðŸ”§ Applying KernelSU manager patch..."
          bash managerpatch.sh

      - name: Build Kernel
        run: |
          set -x
          echo "CLANG_PATH is: $CLANG_PATH"
          ls -la $CLANG_PATH/
          export PATH="$CLANG_PATH:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="senx"
          export KBUILD_BUILD_HOST="ubuntu"
          export KBUILD_BUILD_TIMESTAMP="$(TZ=UTC-7 date)"
          cd kernel
          echo "ðŸ”§ Adding KPM configs to defconfig..."
          echo "CONFIG_KALLSYMS=y" >> "arch/arm64/configs/vendor/munch_defconfig"
          echo "CONFIG_KALLSYMS_ALL=y" >> "arch/arm64/configs/vendor/munch_defconfig"
          echo "CONFIG_KPM=y" >> "arch/arm64/configs/vendor/munch_defconfig"
          make vendor/munch_defconfig O=out
          make -j$(nproc --all) O=out CC=clang CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1

          echo "âœ… Kernel build completed successfully"

      - name: Debug - Check kernel artifacts
        run: |
          cd kernel/out/arch/arm64/boot
          echo "Files in boot directory:"
          ls -la
          echo "File sizes:"
          du -h *

      - name: Apply KPM Patch
        run: |
          set -x
          
          cd kernel/out/arch/arm64/boot
          echo "ðŸ”§ Applying KPM patch..."
          curl -LSs "https://github.com/SukiSU-Ultra/SukiSU_KernelPatch_patch/releases/download/0.12.0/patch_linux" -o patch
          chmod +x patch
          ./patch
          
      - name: Clone AnyKernel3
        run: |
          git clone --depth=1 https://github.com/SenseiiX/AnyKernel3.git anykernel

      - name: Package Kernel with AnyKernel3
        run: |
          # Copy kernel artifacts to AnyKernel3 directory
          cp kernel/out/arch/arm64/boot/Image.gz anykernel/
          cp kernel/out/arch/arm64/boot/dtbo.img anykernel/
          cp kernel/out/arch/arm64/boot/dtb anykernel/

          # Create ZIP file
          cd anykernel
          zip -r9 ../kernel-build-$(date +%Y%m%d-%H%M).zip *

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build
          path: kernel-build-*.zip
